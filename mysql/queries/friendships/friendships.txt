

Query: Create 6 new users


INSERT INTO users (first_name, last_name) VALUES ('Geralt', 'Of Rivia');
INSERT INTO users (first_name, last_name) VALUES ('Yennefer', 'Of Vengerburg');
INSERT INTO users (first_name, last_name) VALUES ('Triss', 'Merigold');
INSERT INTO users (first_name, last_name) VALUES ('Ciri', 'Of Cintra');
INSERT INTO users (first_name, last_name) VALUES ('Sigismund', 'Djikstra');
INSERT INTO users (first_name, last_name) VALUES ('Philippa', 'Eilhart');


Query: Have user 1 be friends with user 2, 4 and 6

INSERT INTO friendships (user_id, friend_id) values (1, 2), (1,4), (1,6)

Query: Have user 2 be friends with user 1, 3 and 5

INSERT INTO friendships (user_id, friend_id) values (2, 1), (2,3), (2,5);

Query: Have user 3 be friends with user 2 and 5

INSERT INTO friendships (user_id, friend_id) values (3, 2), (3,5);

Query: Have user 4 be friends with user 3

INSERT INTO friendships (user_id, friend_id) values (4,3);

Query: Have user 5 be friends with user 1 and 6

INSERT INTO friendships (user_id, friend_id) values (5, 1), (5,6);

Query: Have user 6 be friends with user 2 and 3

INSERT INTO friendships (user_id, friend_id) values (6, 2), (6,3);

Query: Display the relationships create as shown in the above image

SELECT users.first_name, users.last_name, users2.first_name as friend_first_name, users2.last_name as friend_last_name FROM users
JOIN friendships ON users.id = friendships.user_id
LEFT JOIN users as users2 ON users2.id = friendships.friend_id;

NINJA Query: Return all users who are friends with the first user, make sure their names are displayed in results.

SELECT users.first_name, users.last_name, users2.first_name as friend_first_name, users2.last_name as friend_last_name FROM users
JOIN friendships ON users.id = friendships.user_id
LEFT JOIN users as users2 ON users2.id = friendships.friend_id
WHERE users.id = 1;

NINJA Query: Return the count of all friendships

SELECT COUNT(*) as total_number_of_friendships FROM friendships;

NINJA Query: Find out who has the most friends and return the count of their friends.

NINJA Query: Return the friends of the third user in alphabetical order